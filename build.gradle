plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id("xyz.jpenilla.run-paper") version "1.0.6"
    id 'java'
}

group = 'Alien'
version = '4.1'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    flatDir {
        dirs 'libs'
    }
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://repo.codemc.org/repository/maven-public/'
    }
}

dependencies {

    implementation 'com.github.twitch4j:twitch4j:1.10.0'
    implementation 'org.json:json:20220320'
    implementation (name: 'jython-standalone-2.7.2', ext: 'jar')
    implementation 'com.github.TheLimeGlass:StreamElements-Java-API:Beta-1'
    implementation "io.github.bananapuncher714:nbteditor:7.18.3"
    implementation 'org.deeplearning4j:deeplearning4j-core:1.0.0-M2'
    implementation 'org.deeplearning4j:deeplearning4j-ui:1.0.0-M2'
    implementation group: 'org.nd4j', name: 'nd4j-native-platform', version: '1.0.0-M2'
    //implementation 'org.nd4j:nd4j-backends:1.0.0-M2'

    compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'
}

properties{

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.19")
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
